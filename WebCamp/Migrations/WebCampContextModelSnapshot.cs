// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCamp.Data;

#nullable disable

namespace WebCamp.Migrations
{
    [DbContext(typeof(WebCampContext))]
    partial class WebCampContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebCamp.Domain.Enums.TipoCampeonatoEnum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("TipoCampeonato", (string)null);
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Atleta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("TimeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("Atleta", (string)null);
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Campeonato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoCampeonatoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoCampeonatoId");

                    b.ToTable("Campeonato", (string)null);
                });

            modelBuilder.Entity("WebCamp.Domain.Models.CampeonatoTime", b =>
                {
                    b.Property<long>("TimeId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampeonatoId")
                        .HasColumnType("bigint");

                    b.HasKey("TimeId", "CampeonatoId");

                    b.HasIndex("CampeonatoId");

                    b.ToTable("CampeonatoTime", (string)null);
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Time", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apelido")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Time", (string)null);
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Atleta", b =>
                {
                    b.HasOne("WebCamp.Domain.Models.Time", "Time")
                        .WithMany("Atletas")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Campeonato", b =>
                {
                    b.HasOne("WebCamp.Domain.Enums.TipoCampeonatoEnum", "TipoCampeonato")
                        .WithMany()
                        .HasForeignKey("TipoCampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCampeonato");
                });

            modelBuilder.Entity("WebCamp.Domain.Models.CampeonatoTime", b =>
                {
                    b.HasOne("WebCamp.Domain.Models.Campeonato", "Campeonato")
                        .WithMany("Times")
                        .HasForeignKey("CampeonatoId");

                    b.HasOne("WebCamp.Domain.Models.Time", "Time")
                        .WithMany("Campeonatos")
                        .HasForeignKey("TimeId");

                    b.Navigation("Campeonato");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Campeonato", b =>
                {
                    b.Navigation("Times");
                });

            modelBuilder.Entity("WebCamp.Domain.Models.Time", b =>
                {
                    b.Navigation("Atletas");

                    b.Navigation("Campeonatos");
                });
#pragma warning restore 612, 618
        }
    }
}
